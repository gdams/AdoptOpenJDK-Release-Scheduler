{"version":3,"sources":["adopt_logo_white.png","components/Version.js","components/JVM.js","components/scmReference.js","components/Trigger.js","MasterForm.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Version","this","props","currentStep","className","htmlFor","id","name","type","placeholder","value","version","onChange","handleChange","defaultValue","disabled","React","Component","JVM","ScmReference","title","helper","overridePublishName","jvm","style","fontSize","link","href","scmReference","Trigger","MasterForm","handleSubmit","event","preventDefault","state","additionalConfigureArgs","replace","alert","window","open","bind","_next","_prev","addAdditionalConfigureArgs","setState","console","log","target","Fragment","onSubmit","previousButton","nextButton","Button","onClick","App","src","logo","alt","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fffefc34.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/adopt_logo_white.07e2ff50.png\";","import React from 'react';\n\nclass Version extends React.Component {\n  render() {\n    if (this.props.currentStep !== 1) { // Prop: The current step\n      return null\n    }\n    // The markup for the Step 1 UI\n    return(\n      <div className=\"form-group\">\n        <label htmlFor=\"version\">Select a Version</label>\n        <select\n          className=\"form-control\"\n          id=\"version\"\n          name=\"version\"\n          type=\"text\"\n          placeholder=\"Enter Version\"\n          value={this.props.version}\n          onChange={this.props.handleChange}\n          defaultValue={'DEFAULT'}\n        >\n        <option disabled value=\"DEFAULT\"> -- select an option -- </option>\n        <option value=\"8\">JDK8</option>\n        <option value=\"11\">JDK11</option>\n        <option value=\"14\">JDK14</option>\n        <option value=\"15\">JDK15</option>\n        <option value=\"16\">JDK16</option>\n        </select>\n      </div>\n    );\n  }\n}\n\nexport default Version;","import React from 'react';\n\nclass JVM extends React.Component {\n  render() {\n    if (this.props.currentStep !== 2) { // Prop: The current step\n      return null\n    }\n\n    return (\n      <div className=\"form-group\">\n        <label htmlFor=\"JVM\">Select a JVM</label>\n        <select\n          className=\"form-control\"\n          id=\"jvm\"\n          name=\"jvm\"\n          type=\"text\"\n          placeholder=\"Enter JVM\"\n          value={this.props.JVM}\n          onChange={this.props.handleChange}\n          defaultValue={'DEFAULT'}\n        >\n        <option disabled value=\"DEFAULT\"> -- select an option -- </option>\n        <option value=\"hotspot\">Hotspot</option>\n        <option value=\"openj9\">OpenJ9</option>\n        </select>\n      </div>\n    );\n  }\n}\n\nexport default JVM;","import React from 'react';\n\nclass ScmReference extends React.Component {\n  render() {\n    if (this.props.currentStep !== 3) { // Prop: The current step\n      return null\n    }\n\n    let title = '';\n    let helper = '';\n    let overridePublishName = ''\n\n    if (this.props.jvm === 'openj9') {\n        title = \"Specify the extensions release branch: e.g. openj9-0.14.0\"\n        overridePublishName = (\n            <div className=\"form-group\">\n                <label style={{fontSize: \"20px\"}} htmlFor=\"overridePublishName\">GitHub binaries publish name (NOTE: If you are doing a point release, do NOT adjust this as we don't want the filenames to include the .x part), e.g. jdk8u232-b09_openj9-0.14.0 or jdk-11.0.5+10_openj9-0.14.0</label>\n                <input\n                className=\"form-control\"\n                id=\"overridePublishName\"\n                name=\"overridePublishName\"\n                type=\"text\"\n                placeholder=\"Enter overridePublishName\"\n                value={this.props.overridePublishName} // Prop: The email input data\n                onChange={this.props.handleChange} // Prop: Puts data into state\n                />\n            </div>\n        )\n        \n    } else {\n        if (this.props.Version === '8') {\n            title = \"Specify the GitHub release tag: e.g jdk8u232-b09\"\n        } else {\n            title = \"Specify the GitHub release tag: e.g jdk-14.0.1+9_adopt\"\n        }\n        let link = `https://github.com/AdoptOpenJDK/openjdk-jdk${this.props.Version}u/releases/latest`\n        helper = <p>This can most likely be found at <a href={link}>{link}</a></p>\n    }\n    // The markup for the Step 1 UI\n    return(\n       <div className=\"form-group\">\n        <label htmlFor=\"scmReference\">{title}</label>\n        {helper}\n        <input\n          className=\"form-control\"\n          id=\"scmReference\"\n          name=\"scmReference\"\n          type=\"text\"\n          placeholder=\"Enter scmReference\"\n          value={this.props.scmReference} // Prop: The email input data\n          onChange={this.props.handleChange} // Prop: Puts data into state\n        />\n        {overridePublishName}\n      </div>\n    );\n  }\n}\n\nexport default ScmReference;","import React from 'react';\n\nclass Trigger extends React.Component {\n  render() {\n    if (this.props.currentStep !== 4) { // Prop: The current step\n      return null\n    }\n\n    return(\n       <div className=\"form-group\">\n        <label htmlFor=\"email\">Use the button below to take you to Jenkins</label>\n        <button className=\"btn btn-lg btn-success btn-block\">Trigger on Jenkins</button>\n      </div>\n    );\n  }\n}\n\nexport default Trigger;","import React from 'react';\nimport { Button } from 'reactstrap';\nimport Version from './components/Version';\nimport JVM from './components/JVM';\nimport ScmReference from './components/scmReference';\nimport Trigger from './components/Trigger'\n\nclass MasterForm extends React.Component {\n  constructor(props) {\n    super(props)\n    // Set the initial input values\n    this.state = {\n      currentStep: 1, // Default is Step 1\n      additionalConfigureArgs: false,\n      version: '',\n      jvm: '',\n      scmReference: '',\n      overridePublishName: ''\n    }\n\n    // Bind the submission to handleChange() \n    this.handleChange = this.handleChange.bind(this)\n    this._next = this._next.bind(this)\n    this._prev = this._prev.bind(this)\n    this.addAdditionalConfigureArgs=this.addAdditionalConfigureArgs.bind(this)\n  }\n\naddAdditionalConfigureArgs() {\n    if (this.state.version === '8') {\n        this.setState({\n            additionalConfigureArgs: '--with-milestone=fcs'\n        })\n    } else {\n        this.setState({\n            additionalConfigureArgs: '--without-version-pre --without-version-opt'\n        })\n    }\n\n    if (this.state.jvm === 'hotspot') {\n        this.setState({\n            overridePublishName: ''\n        })\n    }\n}\n\n_next() {\n    let currentStep = this.state.currentStep\n    // If the current step is 1 or 2, then add one on \"next\" button click\n    currentStep = currentStep >= 3? 4: currentStep + 1\n    this.setState({\n        currentStep: currentStep\n    })\n    this.addAdditionalConfigureArgs()\n}\n\n_prev() {\n    let currentStep = this.state.currentStep\n    // If the current step is 2 or 3, then subtract one on \"previous\" button click\n    currentStep = currentStep <= 1? 1: currentStep - 1\n    this.setState({\n        currentStep: currentStep\n    })\n}\n\n// The \"next\" and \"previous\" button functions\nget previousButton(){\n  let currentStep = this.state.currentStep;\n  // If the current step is not 1, then render the \"previous\" button\n  if(currentStep !==1){\n    return (\n      <Button \n        className=\"btn btn-secondary btn-lg\" \n        type=\"button\" onClick={this._prev}>\n      Previous\n      </Button>\n    )\n  }\n  // ...else return nothing\n  return null;\n}\n\nget nextButton(){\n  let currentStep = this.state.currentStep;\n  // If the current step is not 4, then render the \"next\" button\n  if(currentStep <4){\n    return (\n      <Button \n        className=\"btn btn-primary btn-lg float-right\" \n        type=\"button\" onClick={this._next}>\n      Next\n      </Button>        \n    )\n  }\n  // ...else render nothing\n  return null;\n}\n\n  // Use the submitted data to set the state\n  handleChange(event) {\n    console.log(this.state)\n    const {name, value} = event.target\n    this.setState({\n      [name]: value\n    })    \n  }\n  \n  // Trigger an alert on form submission\n  handleSubmit = (event) => {\n    event.preventDefault()\n    const { version, jvm, scmReference, additionalConfigureArgs, overridePublishName } = this.state\n    let href=`https://ci.adoptopenjdk.net/job/build-scripts/job/openjdk${version}-pipeline/parambuild/?releaseType=Release&scmReference=${scmReference.replace('+', '%2B')}&additionalConfigureArgs=${additionalConfigureArgs}&overridePublishName=${overridePublishName.replace('+', '%2B')}`\n    alert(`Your specified parameters: \\n \n      Version: ${version} \\n \n      JVM: ${jvm} \\n\n      SCMReference: ${scmReference}\\n\n      AdditionalConfigureArgs: ${additionalConfigureArgs}\\n\n      OverridePublishName: ${overridePublishName}`\n    )\n    window.open(href, '_blank');\n  }\n  \nrender() {    \nreturn (\n  <React.Fragment>\n  <h1>AdoptOpenJDK Release Scheduler</h1>\n  <p>Step {this.state.currentStep} </p> \n    \n  <form onSubmit={this.handleSubmit}>\n    <Version \n        currentStep={this.state.currentStep} \n        handleChange={this.handleChange}\n        Version={this.state.version}\n    />\n    <JVM \n        currentStep={this.state.currentStep} \n        handleChange={this.handleChange}\n        JVM={this.state.JVM}\n        Version={this.state.version}\n        addAdditionalConfigureArgs={this.addAdditionalConfigureArgs}\n    />\n    <ScmReference \n        currentStep={this.state.currentStep} \n        jvm={this.state.jvm}\n        handleChange={this.handleChange}\n        scmReference={this.state.scmReference}\n        Version={this.state.version}\n    />\n    <Trigger \n        currentStep={this.state.currentStep} \n        jvm={this.state.jvm}\n        handleChange={this.handleChange}\n        scmReference={this.state.scmReference}\n        Version={this.state.version}\n    />\n\n      {this.previousButton}\n      {this.nextButton}\n\n  </form>\n  </React.Fragment>\n)\n}\n}\n\nexport default MasterForm;","import React from 'react';\nimport './App.css';\nimport MasterForm from './MasterForm';\nimport 'react-dropdown/style.css';\nimport logo from './adopt_logo_white.png'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n         <img src={logo} className=\"logo\" alt=\"Adopt logo\"/>\n        <MasterForm/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}